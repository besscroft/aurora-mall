<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.besscroft.aurora.mall.admin.mapper.AuthRoleMapper">

    <resultMap id="authRoleMap" type="com.besscroft.aurora.mall.common.entity.AuthRole">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="admin_count" property="adminCount"/>
        <result column="create_time" property="createTime"/>
        <result column="status" property="status"/>
        <result column="sort" property="sort"/>
        <result column="del" property="del"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, description, admin_count, create_time, status, sort, del
    </sql>

    <sql id="selectAuthRoleVo">
        select
            id, name, description, admin_count, create_time, status, sort, del
        from
            bms_auth_role
    </sql>

    <sql id="selectAuthRoleVo2">
        select
            r.id,
            r.name,
            r.description,
            r.admin_count,
            r.create_time,
            r.status,
            r.sort,
            r.del
        from
            bms_auth_role r
    </sql>

    <select id="selectAll" resultSets="java.util.List" resultMap="authRoleMap">
        select
            <include refid="Base_Column_List"/>
        from
            bms_auth_role
    </select>

    <select id="selectAuthRoleListByAdminId" parameterType="Long" resultMap="authRoleMap" resultSets="java.util.List">
        <include refid="selectAuthRoleVo2"/>
        inner join bms_auth_user_role_relation re on r.id = re.role_id
        where
            re.admin_id = #{adminId}
    </select>

    <select id="selectRoleListByPage" resultSets="java.util.List" resultMap="authRoleMap">
        select
            <include refid="Base_Column_List" />
        from
            bms_auth_role
        where
            del = 1
        <if test="keyword != null">
            and name like CONCAT('%',#{keyword},'%')
        </if>
        order by
            id
    </select>

    <select id="selectRoleById" resultMap="authRoleMap">
        select
            <include refid="Base_Column_List" />
        from
            bms_auth_role
        where
            id = #{id}
    </select>

    <insert id="insertRole">
        insert into
        bms_auth_role
            (name, description, admin_count, create_time, status, sort, del)
        values
            (#{name}, #{description}, #{adminCount}, #{createTime}, #{status}, #{sort}, #{del})
    </insert>

    <update id="updateRole">
        update
            bms_auth_role
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="adminCount != null">
                admin_count = #{adminCount},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="del != null">
                del = #{del},
            </if>
        </set>
        where
            id = #{id}
    </update>

    <update id="deleteRoleById">
        update
            bms_auth_role
        set
            del = case
        <foreach collection="ids" item="item">
            when #{item} then 0
        </foreach>
        end
        where
            id in
        <foreach collection="ids" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>

    <update id="changeSwitch">
        update
            bms_auth_role
        set
            status = #{status}
        where
            id = #{id}
    </update>

    <delete id="deleteUserRoleRelationById">
        delete
        from
            auth_user_role_relation
        where
            admin_id = #{userId}
    </delete>

    <insert id="insertUserRoleRelation">
        insert into
        bms_auth_user_role_relation
            (admin_id, role_id)
        values
            (#{userId}, #{roleId})
    </insert>

</mapper>