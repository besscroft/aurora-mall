<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.besscroft.aurora.mall.admin.mapper.AuthMenuMapper">

    <resultMap id="authMenuMap" type="com.besscroft.aurora.mall.common.entity.AuthMenu">
        <result column="id" property="id"/>
        <result column="parent_id" property="parentId"/>
        <result column="create_time" property="createTime"/>
        <result column="title" property="title"/>
        <result column="parent_title" property="parentTitle"/>
        <result column="level" property="level"/>
        <result column="sort" property="sort"/>
        <result column="name" property="name"/>
        <result column="path" property="path"/>
        <result column="icon" property="icon"/>
        <result column="hidden" property="hidden"/>
        <result column="component" property="component"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, parent_id, create_time, title, parent_title, level, sort, name, path, icon, hidden, component
    </sql>

    <select id="getListById" resultSets="java.util.List" resultMap="authMenuMap">
        select
               m.id,
               m.parent_id,
               m.create_time,
               m.title,
               m.parent_title,
               m.level,
               m.sort,
               m.name,
               m.path,
               m.icon,
               m.hidden,
               m.component
        from bms_auth_menu m
            inner join bms_auth_role_menu_relation rm on m.id = rm.menu_id
            inner join bms_auth_role r on rm.role_id = r.id
            inner join bms_auth_user_role_relation ur on r.id = ur.role_id
            inner join bms_auth_user u on ur.admin_id = u.id
        where
            u.id = #{adminId}
        and
            m.hidden = 1
        order by
            m.sort, m.parent_id
    </select>

    <select id="getParentMenu" resultSets="java.util.List" resultMap="authMenuMap">
        select
            <include refid="Base_Column_List"/>
        from
            bms_auth_menu
        where
            parent_id = 0
    </select>

    <select id="getChildListById" resultSets="java.util.List" resultMap="authMenuMap">
        select
            m.id,
            m.parent_id,
            m.create_time,
            m.title,
            m.parent_title,
            m.level,
            m.sort,
            m.name,
            m.path,
            m.icon,
            m.hidden,
            m.component
        from bms_auth_menu m
                 inner join bms_auth_role_menu_relation rm on m.id = rm.menu_id
                 inner join bms_auth_role r on rm.role_id = r.id
                 inner join bms_auth_user_role_relation ur on r.id = ur.role_id
                 inner join bms_auth_user u on ur.admin_id = u.id
        where
            u.id = #{adminId}
        and
            m.parent_id = #{parentId}
        order by
            m.sort
    </select>

    <select id="getChildList" resultSets="java.util.List" resultMap="authMenuMap">
        select
            <include refid="Base_Column_List"/>
        from
            bms_auth_menu
        where
            parent_id = #{parentId}
    </select>

    <select id="selectMenuListByPage" resultSets="java.util.List" resultMap="authMenuMap">
        select
            <include refid="Base_Column_List" />
        from
            bms_auth_menu
        <where>
            <if test="keyword != null">
                and username like CONCAT('%',#{keyword},'%')
            </if>
        </where>
        order by
            id
    </select>

    <select id="selectMenuById" resultMap="authMenuMap">
        select
            <include refid="Base_Column_List" />
        from
            bms_auth_menu
        where
            id = #{id}
    </select>

    <update id="updateMenu">
        update
            bms_auth_menu
        <set>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="parentTitle != null">
                parent_title = #{parentTitle},
            </if>
            <if test="level != null">
                level = #{level},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="path != null">
                path = #{path},
            </if>
            <if test="icon != null">
                icon = #{icon},
            </if>
            <if test="hidden != null">
                hidden = #{hidden},
            </if>
        </set>
        where
            id = #{id}
    </update>

    <update id="changeSwitch">
        update
            bms_auth_menu
        set
            hidden = #{hidden}
        where
            id = #{id}
    </update>

    <insert id="addMenu">
        insert into
        bms_auth_menu
            (parent_id, create_time, title, parent_title, level, sort, name, path, icon, hidden)
        values
            (#{parentId}, #{createTime}, #{title}, #{parentTitle}, #{level}, #{sort}, #{name}, #{path}, #{icon}, #{hidden})
    </insert>

    <select id="selectMenuTreeById" resultSets="java.util.List" resultType="long">
        select
            menu_id
        from
            bms_auth_role_menu_relation
        where
            role_id = #{id}
    </select>

    <delete id="deleteRoleMenuRelation">
        delete
        from
            bms_auth_role_menu_relation
        where
            role_id = #{id}
    </delete>

    <insert id="insertRoleMenuRelation">
        insert into
        bms_auth_role_menu_relation
            (role_id, menu_id)
        values
        <foreach collection="menuIds" item="item" index="index" separator=",">
            (#{roleId},#{item})
        </foreach>
    </insert>

</mapper>